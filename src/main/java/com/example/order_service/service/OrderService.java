package com.example.order_service.service;

import com.example.order_service.client.BillingClient;
import com.example.order_service.dto.BillingWithdrawRequest;
import com.example.order_service.dto.OrderRequest;
import com.example.order_service.dto.OrderResponse;
import com.example.order_service.model.Order;
import com.example.order_service.repository.OrderRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import com.example.order_service.client.NotificationsClient;
import com.example.order_service.dto.NotificationRequest;

import java.util.UUID;

@Service
@RequiredArgsConstructor
public class OrderService {

    private final BillingClient billingClient;
    private final OrderRepository orderRepository;
    private final NotificationsClient notificationsClient;


    public OrderResponse createOrder(OrderRequest request) {
        boolean success = true;
        UUID orderId = null;
        String status = null;
        String message = null;

        try {
            // –ü—ã—Ç–∞–µ–º—Å—è —Å–ø–∏—Å–∞—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ billing-service
            billingClient.withdraw(request.getUserId(), request.getPrice());
//        } catch (Exception ex) {
//            // –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –¥–µ–Ω–µ–≥, –∑–∞–∫–∞–∑ –Ω–µ —Å–æ–∑–¥–∞—ë—Ç—Å—è
//            return OrderResponse.builder()
//                    .orderId(null)
//                    .status("DECLINED: " + ex.getMessage())
//                    .build();


        // 2. –°–æ–∑–¥–∞—ë–º –∑–∞–∫–∞–∑ –≤ –ë–î
        Order order = Order.builder()
                .userId(request.getUserId())
                .price(request.getPrice())
                .status("PAID")
                .build();

        order = orderRepository.save(order);
        orderId = order.getId();
        status = order.getStatus();

        message = "üéâ –ó–∞–∫–∞–∑ ‚Ññ" + orderId + " —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω –Ω–∞ —Å—É–º–º—É: " + request.getPrice() + " —É.–µ.";
    } catch (Exception ex) {

        // –ë–∏–ª–ª–∏–Ω–≥ –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É
        success = false;
        status = "DECLINED";
        message = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –∏–ª–∏ –æ—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã.";
    }

        // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ notifications-service
        try {
            notificationsClient.sendNotification(new NotificationRequest(
                    request.getUserId(),
                    message
            ));
        } catch (Exception notifyEx) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: " + notifyEx.getMessage());
        }

        return OrderResponse.builder()
                .orderId(orderId)
                .status(status)
                .build();
    }
}